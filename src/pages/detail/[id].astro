---
import BaseLayout from '@layout/BaseLayout.astro'
import { Main } from '@Entrypoints/detail/Main'
import { SideBar } from '@Entrypoints/detail/SideBar'
import { Share } from '@Entrypoints/detail/Share'
import { ReactionStamp } from '@Entrypoints/detail/ReactionStamp'
import { getAllBlogs } from '@/lib/API/microCMS/getAllBlogs'
import { getRelativeBlogs } from '@/lib/API/microCMS/getRelativeBlogs'
import { getGithubAccount } from '@/lib/API/getGithubAccount'
import * as styles from '@/styles/pages/detail.css'
import { Card } from '@Atoms/Card'
import { SearchCard } from '@Organisms/search/SearchCard'
import { SearchCardForm } from '@Entrypoints/search/SearchCardForm'

export const prerender = true
export async function getStaticPaths() {
  const allBlogs = await getAllBlogs()

  return allBlogs.map((data) => ({
    params: { id: data.id },
    props: { blog: data },
  }))
}

const { blog } = Astro.props
const pageTitle = `nits-tips | ${blog.title}`
const description = `${blog.description}`
const ogTitle = blog.title
const ogImage = new URL(`/og/${blog.id}.png`, Astro.url.origin).toString()
const relatedBlogs = await getRelativeBlogs(blog)
const githubAccount = await getGithubAccount()
---

<BaseLayout pageTitle={pageTitle} description={description} ogTitle={ogTitle} ogImage={ogImage}>
  <div class={styles.container}>
    <div class={styles.wrapper}>
      <main class={styles.mainContainer}>
        <Main blog={blog} relatedBlogs={relatedBlogs} githubAccount={githubAccount}>
          <ReactionStamp client:only='react' articleId={blog.id} />
        </Main>
      </main>
      <aside class={styles.asideContainer}>
        <SideBar content={blog.content}>
          <Card>
            <div class={styles.shareContainer}>
              <Share
                description={blog.description}
                url={`https://nits-tips.blog/detail/${blog.id}/`}
                client:load
              />
            </div>
          </Card>
          <SearchCard>
            <SearchCardForm client:load />
          </SearchCard>
        </SideBar>
      </aside>
    </div>
  </div>
</BaseLayout>
<script>
  import hljs from 'highlight.js/lib/core'
  import javascript from 'highlight.js/lib/languages/javascript'
  import typescript from 'highlight.js/lib/languages/typescript'
  import json from 'highlight.js/lib/languages/json'
  import css from 'highlight.js/lib/languages/css'
  import go from 'highlight.js/lib/languages/go'
  import ruby from 'highlight.js/lib/languages/ruby'
  import php from 'highlight.js/lib/languages/php'
  import diff from 'highlight.js/lib/languages/diff'
  import 'highlight.js/styles/a11y-dark.min.css'
  hljs.registerLanguage('javascript', javascript)
  hljs.registerLanguage('typescript', typescript)
  hljs.registerLanguage('json', json)
  hljs.registerLanguage('css', css)
  hljs.registerLanguage('go', go)
  hljs.registerLanguage('ruby', ruby)
  hljs.registerLanguage('php', php)
  hljs.registerLanguage('diff', diff)
  hljs.initHighlighting()
</script>
<script>
  document.querySelectorAll('code').forEach((pre) => {
    pre.setAttribute('tabindex', '0')
  })
  document.querySelectorAll('table').forEach((pre) => {
    pre.setAttribute('tabindex', '0')
  })
</script>
